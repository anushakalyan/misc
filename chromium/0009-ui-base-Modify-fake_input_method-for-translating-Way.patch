From 92ee8cb8ac449bb2127f6eacba4950e9b4e35479 Mon Sep 17 00:00:00 2001
From: Tiago Vignatti <tiago.vignatti@intel.com>
Date: Thu, 25 Apr 2013 12:18:02 -0300
Subject: [PATCH 09/19] ui/base: Modify fake_input_method for translating
 Wayland keyboard input event to Aura keyboard event.

Signed-off-by: Tiago Vignatti <tiago.vignatti@intel.com>
---
 ui/base/ime/fake_input_method.cc |   28 ++++++++++++++++++++++++++--
 1 file changed, 26 insertions(+), 2 deletions(-)

diff --git a/ui/base/ime/fake_input_method.cc b/ui/base/ime/fake_input_method.cc
index 1cf236d..acb1c47 100644
--- a/ui/base/ime/fake_input_method.cc
+++ b/ui/base/ime/fake_input_method.cc
@@ -14,7 +14,9 @@
 #include "ui/base/ime/text_input_client.h"
 #include "ui/base/keycodes/keyboard_code_conversion.h"
 
-#if defined(USE_X11)
+#if defined(USE_WAYLAND)
+#include "ui/base/keycodes/keyboard_code_conversion_wayland.h"
+#elif defined(USE_X11)
 #include <X11/X.h>
 #include <X11/Xlib.h>
 #include <X11/Xutil.h>
@@ -23,7 +25,8 @@
 
 namespace {
 
-#if defined(USE_X11)
+#if defined(USE_WAYLAND)
+#elif defined(USE_X11)
 uint32 EventFlagsFromXFlags(unsigned int flags) {
   return (flags & LockMask ? ui::EF_CAPS_LOCK_DOWN : 0U) |
       (flags & ControlMask ? ui::EF_CONTROL_DOWN : 0U) |
@@ -71,6 +74,27 @@ bool FakeInputMethod::DispatchKeyEvent(const base::NativeEvent& native_event) {
   } else {
     handled = delegate_->DispatchKeyEventPostIME(native_event);
   }
+#elif defined(USE_WAYLAND)
+  DCHECK(native_event);
+  if (EventTypeFromNative(native_event) == ET_KEY_RELEASED) {
+    // On key release, just dispatch it.
+    delegate_->DispatchKeyEventPostIME(native_event);
+  } else {
+    const uint32 state = EventFlagsFromNative(native_event);
+    // Send a RawKeyDown event first,
+    delegate_->DispatchKeyEventPostIME(native_event);
+    if (text_input_client_) {
+      // then send a Char event via ui::TextInputClient.
+      const KeyboardCode key_code = ui::KeyboardCodeFromNative(native_event);
+      uint16 ch = 0;
+      if (!(state & ui::EF_CONTROL_DOWN))
+        ch = ui::GetCharacterFromWaylandEvent(native_event);
+      if (!ch)
+        ch = ui::GetCharacterFromKeyCode(key_code, state);
+      if (ch)
+        text_input_client_->InsertChar(ch, state);
+    }
+  }
 #elif defined(USE_X11)
   DCHECK(native_event);
   if (native_event->type == KeyRelease) {
-- 
1.7.9.5

